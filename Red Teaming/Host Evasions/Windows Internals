Processes
-A process maintains and represents the execution of a program
-An application can contain one or more processes
-has a virtual address space, executable code, open handles to system objects, a security context etc
-eg:
1. MsMpEng(microsoft defender)
2. wininit(keyboard and mouse)
3. lsass(cred storage)
-attackers can target processes to evade detection and hide malware as legitimate processes
a. process injection
b. process hollowing
c. process masquerading
Private Virtual Address Space -> Virtual memory addresses that the process is allocated.
Executable Program -> Defines code and data stored in the virtual address space.
Open Handles -> Defines handles to system resources accessible to the process.
Security Context -> The access token defines the user, security groups, privileges, and other security information.
Process ID -> Unique numerical identifier of the process.
Threads -> Section of a process scheduled for execution.

open procmon
-open Logfile.pml
-filter by process name notepad.exe
5984
-go to event properties -> process
3412
-event properties -> process
High

----------------------------------------------------------------------------------------------------------------------------------

Threads
-A thread: is an executable unit employed by a process
-scheduled based on CPU and memory specs, priority and logical factors etc
-controls execution of process
Stack -> All data relevant and specific to the thread (exceptions, procedure calls, etc.)
Thread Local Storage -> Pointers for allocating storage to a unique data environment
Stack Argument -> Unique value assigned to each thread
Context Structure -> Holds machine register values maintained by the kernel
open procmon
-open Logfile.pml
-threadId created by notepad.exe
5908
-stack argument of previous thread?
6584

---------------------------------------------------------------------------------------------------------------------------------

Virtual Memory
-allows other internal components to interact with memory as if it was physical memory without risk of collisions b/n applications
-provides each process with private virtual address space
-memory manager translates virual to physical addresses
-apps may use more virtual memory vs physical memory
-theoretical maximum virtual address space is 4GB on a 32-bit x86 system
-theoretical maximum virtual address space is 256TB on 64-bit system
-flag used to reallocate user process address space: increaseUserVA
-open procmon
-open file Logfile.PML
-filter for process name: notepad.exe
-search for "load image"
-image base: 0x7ff652ec0000
